#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'gridChallenge' function below.
#
# The function is expected to return a STRING.
# The function accepts STRING_ARRAY grid as parameter.
#

# =========== my code ==========

def gridChallenge(grid):
    # Write your code here
    n = 0
    new_grid = []
    
    while n < len(grid):
        if n > 0:
            column = 0
            new_grid.append(''.join(sorted(grid[n])))
            while column < len(grid[n]):
                if new_grid[n][column] < new_grid[n - 1][column]:
                    return 'NO'
                column += 1
            n += 1
        else:
            new_grid.append(''.join(sorted(grid[n])))
            n += 1
    
    return 'YES'        
        
# ==============================    

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    t = int(input().strip())

    for t_itr in range(t):
        n = int(input().strip())

        grid = []

        for _ in range(n):
            grid_item = input()
            grid.append(grid_item)

        result = gridChallenge(grid)

        fptr.write(result + '\n')

    fptr.close()
